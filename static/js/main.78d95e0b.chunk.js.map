{"version":3,"sources":["contexts/SnackBarContext.tsx","api.ts","hooks/useDataMapper.ts","contexts/UserContext.tsx","components/LoadingButton.tsx","components/TextField.tsx","components/LoginForm.tsx","components/DatePicker.tsx","components/RegisterForm.tsx","pages/Login.tsx","contexts/FeedContext.tsx","contexts/ProfileContext.tsx","components/NewComment.tsx","contexts/ConfirmContext.tsx","components/Post.tsx","components/Feed.tsx","components/Menu.tsx","components/NewPost.tsx","components/Profile.tsx","components/Layout.tsx","App.tsx","index.tsx"],"names":["SnackBarContext","createContext","snackBar","Error","SnackBarProvider","children","useState","isOpen","setOpen","text","setText","type","setType","theme","useTheme","Provider","value","snackText","snackType","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","ContentProps","style","backgroundColor","palette","error","main","onClose","_","reason","action","IconButton","size","aria-label","color","onClick","useSnackBarContext","useContext","api","axios","create","baseURL","withCredentials","interceptors","response","use","console","config","data","log","Promise","reject","Array","isArray","firstError","description","errors","useDataMapper","userAPIToUser","id","usuarioId","name","nome","lastName","sobrenome","email","birthDate","aniversario","Date","location","localidade","profileId","perfil","perfilId","following","seguindo","map","el","perfilSeguidoId","followers","seguidores","avatarUrl","imagemPerfil","profileAPIToUserFields","defaultUser","loadedJsonUserData","localStorage","getItem","JSON","parse","undefined","UserContext","user","login","register","logout","updateUser","UserProvider","setUser","useEffect","setItem","stringify","removeItem","a","get","result","fetchLoggedUser","password","post","others","userFields","oldUser","useUserContext","useStyles","makeStyles","createStyles","buttonProgress","position","top","left","marginTop","marginLeft","LoadingButton","disabled","props","isSubmitting","useFormikContext","classes","display","CircularProgress","className","TextField","React","forwardRef","ref","icon","InputProps","helperText","useField","field","meta","setFieldValue","iconAdornment","InputAdornment","Box","mb","inputRef","touched","startAdornment","initialValues","validationSchema","object","string","required","LoginForm","history","useHistory","onSubmit","push","resetForm","Grid","container","spacing","direction","item","label","InputLabelProps","width","justify","Button","DatePicker","onChange","format","setValue","date","confirmPassword","Yup","oneOf","max","nullable","typeError","RegisterForm","autoFocus","placeholder","root","flexGrow","height","loginPaper","padding","marginBottom","Login","useLocation","alignItems","Paper","Typography","paddingBottom","pathname","path","guilhermeUser","samelUser","defaultFeed","posts","uuid","content","createdBy","createdAt","comments","fakedUsers","factedUsers","index","FeedContext","feed","loading","addPost","loadMorePosts","commentOnPost","toggleFakePost","toggleFactPost","deletePost","updatePostContent","resetFakedFacted","filter","FeedProvider","setFeed","setLoading","postWithId","oldFeed","res","setTimeout","newType","addFakedUser","addFactedUser","comment","commentWithId","useFeedContext","ProfileContext","loadingFollowBtn","loadingAvatarBtn","gallery","fetchUser","toggleFollow","changeAvatar","fetchGallery","ProfileProvider","setGallery","setLoadingFollowBtn","setLoadingAvatarBtn","loggedUser","userId","includes","perfilSeguido","perfilLogado","file","formData","FormData","append","splited","split","length","imgName","NewComment","postId","textFieldRef","useRef","commentText","current","focus","ConfirmContext","confirm","ConfirmProvider","title","onOk","state","setState","close","oldState","Dialog","maxWidth","aria-labelledby","DialogTitle","DialogContent","DialogActions","Post","isUpdating","setIsUpdating","updatedContent","setContent","p","flex","pr","Avatar","alt","src","variant","Link","component","RouterLink","to","textDecoration","toLocaleString","Tooltip","fontSize","InputBase","margin","multiline","e","target","inputProps","fontWeight","lineHeight","letterSpacing","Divider","startIcon","success","pb","key","PostFeed","listRef","checkForMorePosts","getBoundingClientRect","bottom","window","innerHeight","document","getElementById","addEventListener","removeEventListener","innerRef","Menu","anchor","anchorEl","setAnchorEl","handleClose","renderAncorWithProps","cloneElement","currentTarget","renderChildrenWithProps","Children","child","isValidElement","keepMounted","Boolean","getContentAnchorEl","transformOrigin","NewPost","img","setImg","uploadInputRef","justifyContent","URL","createObjectURL","mr","disableElevation","click","accept","files","Profile","useParams","init","md","xs","marginRight","pt","textTransform","m","borderRadius","right","minWidth","textAlign","grey","orientation","mx","py","px","GridList","cols","cellHeight","GridListTile","Feed","menuButton","Layout","showMenu","useMediaQuery","breakpoints","up","AppBar","Container","Toolbar","href","MenuItem","Root","styled","flexDirection","overflow","App","createMuiTheme","overrides","MuiButton","MuiInputBase","input","primary","adornedStart","MuiOutlinedInput","MuiFormHelperText","MuiPaper","rounded","MuiTextField","elevation","ReactDOM","render","CssBaseline","ThemeProvider","utils","DateFnsUtils"],"mappings":"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","file":"static/js/main.78d95e0b.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport { IconButton, Snackbar, useTheme } from '@material-ui/core';\nimport { Close } from 'mdi-material-ui';\n\ntype SnackTypes = 'info' | 'danger';\n\ntype SnackBarContextType = {\n  snackBar: (text: string, type?: SnackTypes) => void;\n};\n\nexport const SnackBarContext = createContext<SnackBarContextType>({\n  snackBar: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n});\n\nconst SnackBarProvider: React.FC = ({ children }) => {\n  const [isOpen, setOpen] = useState(false);\n  const [text, setText] = useState('');\n  const [type, setType] = useState<SnackTypes>('info');\n  const theme = useTheme();\n\n  return (\n    <SnackBarContext.Provider\n      value={{\n        snackBar: (snackText, snackType = 'info') => {\n          setOpen(true);\n          setText(snackText);\n          setType(snackType);\n        },\n      }}\n    >\n      {children}\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={isOpen}\n        autoHideDuration={4000}\n        message={text}\n        ContentProps={{\n          style: type === 'danger' ? { backgroundColor: theme.palette.error.main } : {},\n        }}\n        onClose={(_, reason) => {\n          if (reason === 'clickaway') {\n            return;\n          }\n\n          setOpen(false);\n        }}\n        action={\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => setOpen(false)}>\n            <Close />\n          </IconButton>\n        }\n      />\n    </SnackBarContext.Provider>\n  );\n};\n\nexport default SnackBarProvider;\n\nexport function useSnackBarContext() {\n  return useContext(SnackBarContext);\n}\n","/* eslint-disable no-console */\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  withCredentials: true,\n});\n\napi.interceptors.response.use(\n  (_) => _,\n  (error) => {\n    console.error(error);\n    console.error(error.response);\n\n    if (error.response?.config.data) {\n      console.log('Request payload: ');\n      console.log(error.response.config.data);\n    }\n\n    // api returns only a string as response\n    // should handle as the error msg\n    if (typeof error.response?.data === 'string') {\n      return Promise.reject(Error(error.response.data));\n    }\n\n    // api returns a error array\n    // should handle as the error msg\n    if (Array.isArray(error.response?.data)) {\n      const firstError = error.response.data[0];\n      return Promise.reject(Error(firstError.description ?? 'Unexpected Error'));\n    }\n\n    // api returns an array os errors\n    // should handle as validation error\n    // therefore something was sent wrong\n    if (error.response?.data.errors) {\n      console.error('Validation Error');\n      console.error(error.response?.data.errors);\n    }\n\n    return Promise.reject(Error('Inernal Error'));\n  },\n);\n\nexport default api;\n","import { PerfilAPI, UserResponse } from '../@types/apiTypes';\nimport { ProfileFields, User } from '../contexts/UserContext';\n\nexport default function useDataMapper() {\n  return {\n    userAPIToUser({ data }: UserResponse): User {\n      return {\n        id: data.usuarioId,\n        name: data.nome,\n        lastName: data.sobrenome,\n        email: data.email,\n        birthDate: data.aniversario ? new Date(data.aniversario) : null,\n        location: data.localidade,\n        profileId: data.perfil.perfilId,\n        following: data.perfil.seguindo?.map((el) => el.perfilSeguidoId) ?? [],\n        followers: data.perfil.seguidores?.map((el) => el.perfilId) ?? [],\n        avatarUrl: data.perfil.imagemPerfil ?? '',\n      };\n    },\n\n    profileAPIToUserFields(data: PerfilAPI): ProfileFields {\n      return {\n        profileId: data.perfilId,\n        following: data.seguindo?.map((el) => el.perfilSeguidoId) ?? [],\n        followers: data.seguidores?.map((el) => el.perfilId) ?? [],\n        avatarUrl: data.imagemPerfil ?? '',\n      };\n    },\n  };\n}\n","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { UserResponse } from '../@types/apiTypes';\nimport api from '../api';\nimport useDataMapper from '../hooks/useDataMapper';\n\nexport type User = {\n  id: number;\n  name: string;\n  lastName: string;\n  email: string;\n  location: string | null;\n  birthDate: Date | null;\n\n  profileId: number;\n  following: number[];\n  followers: number[];\n  avatarUrl: string;\n};\n\nexport type ProfileFields = Pick<User, 'profileId' | 'following' | 'followers' | 'avatarUrl'>;\n\ntype ContextUser = undefined | User;\n\ntype RegisterParams = {\n  name: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  location?: string;\n  birthDate?: Date | null;\n};\n\ntype UserContextType = {\n  user: ContextUser;\n  login: (email: string, password: string) => Promise<ContextUser | string>;\n  logout: () => void;\n  register: (args: RegisterParams) => Promise<ContextUser | string>;\n  updateUser: (userFiels: Partial<User>) => void;\n};\n\nconst USER_STORAGE = 'user';\n\nconst loadedJsonUserData = localStorage.getItem(USER_STORAGE);\nlet defaultUser: ContextUser;\n\ntry {\n  defaultUser = loadedJsonUserData ? JSON.parse(loadedJsonUserData) : undefined;\n} catch (_) {\n  // if json is corrupted\n  defaultUser = undefined;\n}\n\nexport const UserContext = createContext<UserContextType>({\n  user: defaultUser,\n  login: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  register: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  logout: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  updateUser: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n});\n\nconst UserProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<ContextUser>(defaultUser);\n  const { userAPIToUser } = useDataMapper();\n\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem(USER_STORAGE, JSON.stringify(user));\n    } else {\n      localStorage.removeItem(USER_STORAGE);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const fetchLoggedUser = async () => {\n      if (user) {\n        let result: UserResponse;\n\n        try {\n          result = await api.get('/usuario/eu');\n          setUser(userAPIToUser(result));\n        } catch (error) {\n          setUser(undefined);\n        }\n      }\n    };\n\n    fetchLoggedUser();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n\n        async login(email, password) {\n          let result;\n\n          try {\n            result = await api.post('/account/login', {\n              email,\n              password,\n            });\n          } catch (error) {\n            return error.message;\n          }\n\n          setUser(userAPIToUser(result));\n\n          return result.data;\n        },\n\n        async logout() {\n          await api.post('/account/logout');\n          setUser(undefined);\n        },\n\n        async register({ name, lastName, location, birthDate, ...others }) {\n          let result;\n\n          try {\n            const data: any = {\n              nome: name,\n              sobrenome: lastName,\n              ...others,\n            };\n\n            if (location) {\n              data.localidade = location;\n            }\n\n            if (birthDate) {\n              data.aniversario = birthDate;\n            }\n\n            result = await api.post('/account/register', data);\n          } catch (error) {\n            return error.message;\n          }\n\n          setUser(userAPIToUser(result));\n\n          return result.data;\n        },\n\n        updateUser(userFields) {\n          setUser((oldUser) => ({\n            ...(oldUser as User),\n            ...userFields,\n          }));\n        },\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n\nexport function useUserContext() {\n  return useContext(UserContext);\n}\n","import React from 'react';\nimport MuiButton, { ButtonProps } from '@material-ui/core/Button';\nimport { useFormikContext } from 'formik';\nimport { CircularProgress, makeStyles, createStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  }),\n);\n\nconst LoadingButton: React.FC<ButtonProps> = ({ disabled, children, ...props }) => {\n  const { isSubmitting } = useFormikContext();\n  const classes = useStyles();\n\n  return (\n    <MuiButton {...props} disabled={disabled ?? isSubmitting} style={{ display: 'inline-block' }}>\n      {isSubmitting ? <CircularProgress size={24} className={classes.buttonProgress} /> : <div>{children}</div>}\n    </MuiButton>\n  );\n};\n\nexport default LoadingButton;\n","import React, { useEffect } from 'react';\nimport MuiTextfield, { TextFieldProps as MuiTextFieldProps } from '@material-ui/core/TextField';\nimport { useField, useFormikContext } from 'formik';\nimport { Box, InputAdornment } from '@material-ui/core';\n\nexport type TextFieldProps = MuiTextFieldProps & {\n  name: string;\n  icon?: JSX.Element;\n};\n\nconst TextField = React.forwardRef<HTMLInputElement, TextFieldProps>(\n  ({ name, icon, disabled, value, InputProps, helperText, ...props }, ref) => {\n    const [field, meta] = useField(name);\n    const { isSubmitting, setFieldValue } = useFormikContext();\n\n    // every time the prop 'value' changes\n    // it reflects in formik state\n    useEffect(() => {\n      setFieldValue(name, value ?? '');\n    }, [name, value, setFieldValue]);\n\n    const iconAdornment = icon ? <InputAdornment position=\"start\">{icon}</InputAdornment> : null;\n\n    return (\n      <Box mb={helperText ? 1 : 'auto'}>\n        <MuiTextfield\n          inputRef={ref}\n          {...field}\n          {...props}\n          error={meta.touched && !!meta.error}\n          helperText={meta.touched && meta.error ? meta.error : helperText}\n          disabled={disabled || isSubmitting}\n          InputProps={{\n            ...InputProps,\n            startAdornment: iconAdornment,\n          }}\n        />\n      </Box>\n    );\n  },\n);\n\nexport default TextField;\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Form, Formik } from 'formik';\nimport { Email, Lock } from 'mdi-material-ui';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { object, string } from 'yup';\nimport { useSnackBarContext } from '../contexts/SnackBarContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport LoadingButton from './LoadingButton';\nimport TextField from './TextField';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = object({\n  email: string().email().required('Fill with your email!'),\n  password: string().required('Fill with your password'),\n});\n\nconst LoginForm: React.FC = () => {\n  const history = useHistory();\n  const { login } = useUserContext();\n  const { snackBar } = useSnackBarContext();\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={async (data) => {\n        const result = await login(data.email, data.password);\n\n        if (typeof result !== 'string') {\n          history.push('/');\n        } else {\n          snackBar(result, 'danger');\n        }\n      }}\n    >\n      {({ resetForm }) => (\n        <Form>\n          <Grid container spacing={1} direction=\"column\">\n            <Grid item>\n              <TextField\n                name=\"email\"\n                label=\"E-mail\"\n                required\n                InputLabelProps={{ required: false }}\n                style={{ width: '100%' }}\n                icon={<Email />}\n              />\n            </Grid>\n\n            <Grid item>\n              <TextField name=\"password\" label=\"Password\" type=\"password\" style={{ width: '100%' }} icon={<Lock />} />\n            </Grid>\n\n            <Grid container item justify=\"flex-end\" spacing={1}>\n              <Grid item>\n                <Button\n                  onClick={() => {\n                    resetForm({});\n                    history.push('/register');\n                  }}\n                >\n                  Create Account\n                </Button>\n              </Grid>\n\n              <Grid item>\n                <LoadingButton color=\"primary\" type=\"submit\">\n                  Login\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import { Box } from '@material-ui/core';\nimport { KeyboardDatePicker, KeyboardDatePickerProps } from '@material-ui/pickers';\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\nimport { useField, useFormikContext } from 'formik';\nimport React from 'react';\n\nexport type DatePickerProps = Omit<KeyboardDatePickerProps, 'onChange' | 'value'> & {\n  name: string;\n  onChange?: (date: MaterialUiPickersDate) => void;\n};\n\nconst DatePicker: React.FC<DatePickerProps> = ({ name, disabled, helperText, onChange, format, ...props }) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [{ onChange: _, ...field }, meta, { setValue }] = useField(name);\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <Box mb={helperText ? 1 : 'auto'}>\n      <KeyboardDatePicker\n        onChange={(date) => {\n          if (onChange) {\n            onChange(date);\n          }\n          setValue(date, false);\n        }}\n        {...field}\n        {...props}\n        format={format ?? 'dd/MM/yyyy'}\n        error={meta.touched && !!meta.error}\n        helperText={meta.touched && meta.error ? meta.error : helperText}\n        disabled={disabled || isSubmitting}\n      />\n    </Box>\n  );\n};\n\nexport default DatePicker;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Email, Lock, MapMarker } from 'mdi-material-ui';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport TextField from './TextField';\nimport LoadingButton from './LoadingButton';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useSnackBarContext } from '../contexts/SnackBarContext';\nimport DatePicker from './DatePicker';\n\nexport const initialValues = {\n  name: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n  location: '',\n  birthDate: null,\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Fill with your name!'),\n  lastName: Yup.string().required('Fill with your last name!'),\n  email: Yup.string().email().required('Fill with your email!'),\n  password: Yup.string().required('Fill with your password'),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref('password')], \"Passwords don't match\")\n    .required('Please confirm our password!'),\n  location: Yup.string(),\n  birthDate: Yup.date()\n    .max(new Date(), 'Only past dates are valid!')\n    .nullable()\n    .typeError('Please enter a valid date!'),\n});\n\nconst RegisterForm: React.FC = () => {\n  const history = useHistory();\n  const { register } = useUserContext();\n  const { snackBar } = useSnackBarContext();\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={async (data) => {\n        const result = await register(data);\n\n        if (typeof result === 'string') {\n          snackBar(result, 'danger');\n        } else {\n          history.push('/');\n        }\n      }}\n    >\n      {({ resetForm }) => (\n        <Form>\n          <Grid container spacing={1} direction=\"column\">\n            <Grid item>\n              <TextField autoFocus name=\"name\" label=\"Name\" style={{ width: '100%' }} />\n            </Grid>\n\n            <Grid item>\n              <TextField name=\"lastName\" label=\"Last Name\" style={{ width: '100%' }} />\n            </Grid>\n\n            <Grid item>\n              <TextField name=\"email\" label=\"E-mail\" style={{ width: '100%' }} icon={<Email />} />\n            </Grid>\n\n            <Grid item>\n              <TextField name=\"password\" label=\"Password\" style={{ width: '100%' }} type=\"password\" icon={<Lock />} />\n            </Grid>\n\n            <Grid item>\n              <TextField\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                style={{ width: '100%' }}\n                type=\"password\"\n                icon={<Lock />}\n              />\n            </Grid>\n\n            <Grid item>\n              <TextField\n                name=\"location\"\n                label=\"Location\"\n                style={{ width: '100%' }}\n                placeholder=\"RJ, Rio de Janeiro\"\n                icon={<MapMarker />}\n              />\n            </Grid>\n\n            <Grid item>\n              <DatePicker name=\"birthDate\" label=\"Birth Date\" style={{ width: '100%' }} />\n            </Grid>\n\n            <Grid container item justify=\"flex-end\" spacing={1}>\n              <Grid item>\n                <Button\n                  onClick={() => {\n                    resetForm({});\n                    history.push('/login');\n                  }}\n                >\n                  Login\n                </Button>\n              </Grid>\n\n              <Grid item>\n                <LoadingButton color=\"primary\" type=\"submit\">\n                  Create Account\n                </LoadingButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, useTheme } from '@material-ui/core';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport LoginForm from '../components/LoginForm';\nimport RegisterForm from '../components/RegisterForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    height: '100vh',\n  },\n\n  loginPaper: {\n    width: '360px',\n    padding: theme.spacing(4),\n    marginBottom: theme.spacing(5),\n  },\n}));\n\nconst Login: React.FC = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const location = useLocation();\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Paper className={classes.loginPaper}>\n        <Grid container spacing={1} direction=\"column\">\n          <Typography color=\"textSecondary\" style={{ paddingBottom: theme.spacing(3) }}>\n            {location.pathname === '/login' ? 'Login' : 'Create Account'}\n          </Typography>\n\n          <Switch>\n            <Route path=\"/login\">\n              <LoginForm />\n            </Route>\n\n            <Route path=\"/register\">\n              <RegisterForm />\n            </Route>\n          </Switch>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { createContext, useState, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { useUserContext, User } from './UserContext';\n\ntype ModifyFakedFactedUsers = (\n  post: Post,\n  user: User,\n) => {\n  type: 'fake' | 'fact' | undefined;\n  fakedUsers: PostUser[];\n  factedUsers: PostUser[];\n};\n\nexport type PostUser = {\n  id: string | number;\n  name: string;\n  avatarUrl?: string;\n};\n\nconst guilhermeUser = {\n  id: 1,\n  name: 'Guilherme',\n  avatarUrl: 'https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4',\n};\n\nconst samelUser = {\n  id: 2,\n  name: 'Samel',\n  avatarUrl: 'https://avatars2.githubusercontent.com/u/36681917?s=460&u=4fcf73a31535597993452e5c6afdd3cf9ef67936&v=4',\n};\n\nexport type PostComment = {\n  id: string;\n  content: string;\n  createdBy: PostUser;\n};\n\nexport type Post = {\n  id: string;\n  content: string;\n  createdAt: Date;\n  createdBy: PostUser;\n  type?: 'fake' | 'fact';\n  comments: PostComment[];\n  fakedUsers: PostUser[];\n  factedUsers: PostUser[];\n};\n\ntype Feed = {\n  posts: Post[];\n};\n\ntype FeedContextType = {\n  feed: Feed;\n  loading: Boolean;\n  addPost: (post: Omit<Post, 'id'>) => void;\n  deletePost: (id: string) => void;\n  updatePostContent: (id: string, content: string) => void;\n  loadMorePosts: () => Promise<void>;\n  toggleFakePost: (id: string) => void;\n  toggleFactPost: (id: string) => void;\n  commentOnPost: (id: string, comment: Omit<PostComment, 'id'>) => void;\n};\n\nconst defaultFeed: Feed = {\n  posts: [\n    {\n      id: uuid(),\n      content: `post com comentário`,\n      createdBy: samelUser,\n      createdAt: new Date(),\n      comments: [\n        { id: uuid(), content: 'um comentario', createdBy: guilhermeUser },\n        { id: uuid(), content: 'outro comentario', createdBy: samelUser },\n      ],\n      fakedUsers: [guilhermeUser, samelUser],\n      factedUsers: [],\n    },\n    ...[1, 2, 3, 4, 5].map((index) => ({\n      id: uuid(),\n      content: `post ${index}`,\n      createdBy: guilhermeUser,\n      createdAt: new Date(),\n      comments: [],\n      fakedUsers: [],\n      factedUsers: [],\n    })),\n  ],\n};\n\nexport const FeedContext = createContext<FeedContextType>({\n  feed: defaultFeed,\n  loading: false,\n  addPost: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  loadMorePosts: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  commentOnPost: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  toggleFakePost: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  toggleFactPost: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  deletePost: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  updatePostContent: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n});\n\nconst addFakedUser: ModifyFakedFactedUsers = (post, user) => {\n  return {\n    type: 'fake',\n    fakedUsers: [...post.fakedUsers, { name: user.name, avatarUrl: user.avatarUrl, id: user.id }],\n    factedUsers: post.factedUsers.filter((el) => el.name !== user.name),\n  };\n};\n\nconst addFactedUser: ModifyFakedFactedUsers = (post, user) => {\n  return {\n    type: 'fact',\n    fakedUsers: post.fakedUsers.filter((el) => el.name !== user.name),\n    factedUsers: [...post.factedUsers, { name: user.name, avatarUrl: user.avatarUrl, id: user.id }],\n  };\n};\n\nconst resetFakedFacted: ModifyFakedFactedUsers = (post, user) => {\n  return {\n    type: undefined,\n    fakedUsers: post.fakedUsers.filter((el) => el.name !== user.name),\n    factedUsers: post.factedUsers.filter((el) => el.name !== user.name),\n  };\n};\n\nconst FeedProvider: React.FC = ({ children }) => {\n  const [feed, setFeed] = useState<Feed>(defaultFeed);\n  const [loading, setLoading] = useState<Boolean>(false);\n  const { user } = useUserContext();\n\n  return (\n    <FeedContext.Provider\n      value={{\n        feed,\n        loading,\n\n        addPost: (post) => {\n          const postWithId = {\n            ...post,\n            id: uuid(),\n          };\n\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: [postWithId, ...oldFeed.posts],\n          }));\n        },\n\n        deletePost(id) {\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: oldFeed.posts.filter((el) => el.id !== id),\n          }));\n        },\n\n        loadMorePosts: async () => {\n          setLoading(true);\n          return new Promise<void>((res) =>\n            setTimeout(() => {\n              setFeed((oldFeed) => ({\n                ...oldFeed,\n                posts: [\n                  ...oldFeed.posts,\n                  ...[1, 2, 3, 4, 5].map((index) => ({\n                    id: uuid(),\n                    content: `post ${index}`,\n                    createdBy: guilhermeUser,\n                    createdAt: new Date(),\n                    comments: [],\n                    fakedUsers: [],\n                    factedUsers: [],\n                  })),\n                ],\n              }));\n              setLoading(false);\n              res();\n            }, 500),\n          );\n        },\n\n        toggleFakePost(id) {\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: oldFeed.posts.map((post) => {\n              if (post.id === id) {\n                const newType = post.type !== 'fake' ? 'fake' : undefined;\n\n                return {\n                  ...post,\n                  ...(newType === 'fake' ? addFakedUser(post, user!) : resetFakedFacted(post, user!)),\n                };\n              }\n              return post;\n            }),\n          }));\n        },\n\n        toggleFactPost(id) {\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: oldFeed.posts.map((post) => {\n              if (post.id === id) {\n                const newType = post.type !== 'fact' ? 'fact' : undefined;\n\n                return {\n                  ...post,\n                  ...(newType === 'fact' ? addFactedUser(post, user!) : resetFakedFacted(post, user!)),\n                };\n              }\n              return post;\n            }),\n          }));\n        },\n\n        commentOnPost(id, comment) {\n          const commentWithId = {\n            ...comment,\n            id: uuid(),\n          };\n\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: oldFeed.posts.map((post) => {\n              if (post.id === id) {\n                return {\n                  ...post,\n                  comments: [...post.comments, commentWithId],\n                };\n              }\n              return post;\n            }),\n          }));\n        },\n\n        updatePostContent(id, content) {\n          setFeed((oldFeed) => ({\n            ...oldFeed,\n            posts: oldFeed.posts.map((post) => {\n              if (post.id === id) {\n                return {\n                  ...post,\n                  content,\n                };\n              }\n              return post;\n            }),\n          }));\n        },\n      }}\n    >\n      {children}\n    </FeedContext.Provider>\n  );\n};\n\nexport default FeedProvider;\n\nexport function useFeedContext() {\n  return useContext(FeedContext);\n}\n","import React, { createContext, useContext, useState } from 'react';\nimport { GalleryResponse, ProfileResponse, SingleProfileResponse, UserResponse } from '../@types/apiTypes';\nimport api from '../api';\nimport useDataMapper from '../hooks/useDataMapper';\nimport { User, useUserContext } from './UserContext';\n\ntype ProfileContextType = {\n  user: User | null;\n  gallery: string[];\n  loadingFollowBtn: boolean;\n  loadingAvatarBtn: boolean;\n  fetchUser: (userId: string) => Promise<UserResponse | string>;\n  toggleFollow: (profileId: number) => Promise<ProfileResponse | string>;\n  changeAvatar: (profileId: number, file: File) => Promise<ProfileResponse | string>;\n  fetchGallery: (profileId: number) => Promise<GalleryResponse | string>;\n};\n\nexport const ProfileContext = createContext<ProfileContextType>({\n  user: null,\n  loadingFollowBtn: false,\n  loadingAvatarBtn: false,\n  gallery: [],\n  fetchUser: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  toggleFollow: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  changeAvatar: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n  fetchGallery: () => {\n    throw new Error('you should only use this context inside the provider!');\n  },\n});\n\nconst ProfileProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [gallery, setGallery] = useState<string[]>([]);\n  const [loadingFollowBtn, setLoadingFollowBtn] = useState(false);\n  const [loadingAvatarBtn, setLoadingAvatarBtn] = useState(false);\n  const { userAPIToUser, profileAPIToUserFields } = useDataMapper();\n  const { user: loggedUser, updateUser } = useUserContext();\n\n  return (\n    <ProfileContext.Provider\n      value={{\n        user,\n        loadingFollowBtn,\n        loadingAvatarBtn,\n        gallery,\n\n        async fetchUser(userId) {\n          let result: UserResponse;\n\n          try {\n            result = await api.get(`/usuario/${userId}`);\n          } catch (error) {\n            return 'User not found!';\n          }\n\n          setUser(userAPIToUser(result));\n          return result;\n        },\n\n        async toggleFollow(profileId) {\n          let result: ProfileResponse;\n\n          const following = loggedUser?.following.includes(profileId);\n\n          try {\n            setLoadingFollowBtn(true);\n            result = await api.post(`/perfil/${profileId}/${following ? 'parar-de-seguir' : 'seguir'}`);\n          } catch (error) {\n            return error;\n          } finally {\n            setLoadingFollowBtn(false);\n          }\n\n          setUser((oldUser) => ({\n            ...(oldUser as User),\n            ...profileAPIToUserFields(result.data.perfilSeguido),\n          }));\n\n          updateUser(profileAPIToUserFields(result.data.perfilLogado));\n\n          return result;\n        },\n\n        async changeAvatar(profileId, file) {\n          let result: SingleProfileResponse;\n\n          const formData = new FormData();\n\n          formData.append('files', file);\n\n          try {\n            setLoadingAvatarBtn(true);\n            result = await api.post(`/perfil/${profileId}/foto-perfil`, formData);\n          } catch (error) {\n            return error;\n          } finally {\n            setLoadingAvatarBtn(false);\n          }\n\n          setUser((oldUser) => ({\n            ...(oldUser as User),\n            ...profileAPIToUserFields(result.data),\n          }));\n\n          updateUser(profileAPIToUserFields(result.data));\n\n          return result;\n        },\n\n        async fetchGallery(profileId) {\n          let result: GalleryResponse;\n\n          try {\n            result = await api.get(`/perfil/${profileId}/foto-perfil`);\n          } catch (error) {\n            return error;\n          }\n\n          const newGallery = result.data.map((el) => {\n            debugger;\n            const splited = el.split('/imagens/');\n\n            if (splited.length !== 2) {\n              return false;\n            }\n\n            if (!splited[1].includes('/')) {\n              return false;\n            }\n\n            const [id, imgName] = splited[1].split('/');\n\n            if (+id !== profileId) {\n              return false;\n            }\n\n            return imgName;\n          });\n\n          setGallery([]);\n\n          return result;\n        },\n      }}\n    >\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport default ProfileProvider;\n\nexport function useProfileContext() {\n  return useContext(ProfileContext);\n}\n","import React, { useRef } from 'react';\nimport { Formik, Form } from 'formik';\nimport { useFeedContext } from '../contexts/FeedContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport TextField from './TextField';\n\nexport type PostNewCommentProps = {\n  postId: string;\n  disabled: boolean;\n};\n\nconst NewComment: React.FC<PostNewCommentProps> = ({ postId, disabled }) => {\n  const { commentOnPost } = useFeedContext();\n  const { user } = useUserContext();\n  const textFieldRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <Formik\n      initialValues={{\n        commentText: '',\n      }}\n      onSubmit={async (data, { resetForm }) => {\n        commentOnPost(postId, {\n          content: data.commentText,\n          createdBy: {\n            id: 1,\n            name: user!.name,\n            avatarUrl: user!.avatarUrl,\n          },\n        });\n        resetForm();\n        textFieldRef.current!.focus();\n      }}\n    >\n      <Form>\n        <TextField\n          ref={textFieldRef}\n          size=\"small\"\n          placeholder=\"Comment ...\"\n          name=\"commentText\"\n          style={{ width: '100%' }}\n          InputProps={{\n            style: { marginBottom: 0 },\n          }}\n          disabled={disabled}\n        />\n      </Form>\n    </Formik>\n  );\n};\n\nexport default NewComment;\n","import React, { createContext, useState, useContext } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button } from '@material-ui/core';\n\ntype ConfirmArgs = {\n  title: string;\n  content: string;\n  onOk: () => void;\n  onClose?: () => void;\n};\n\ntype ConfirmContextType = {\n  confirm: (args: ConfirmArgs) => void;\n};\n\nexport const ConfirmContext = createContext<ConfirmContextType>({\n  confirm() {\n    throw new Error('you should only use this context inside the provider!');\n  },\n});\n\ntype ConfirmState = ConfirmArgs & {\n  isOpen: boolean;\n};\n\nconst ConfirmProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ConfirmState>({\n    title: '',\n    content: '',\n    onOk: () => {},\n    onClose: () => {},\n    isOpen: false,\n  });\n\n  const close = () => {\n    setState((oldState) => ({\n      ...oldState,\n      isOpen: false,\n    }));\n  };\n\n  return (\n    <ConfirmContext.Provider\n      value={{\n        confirm({ title, content, onOk, onClose }) {\n          setState({\n            title,\n            content,\n            isOpen: true,\n            onOk: () => {\n              close();\n              onOk();\n            },\n            onClose: () => {\n              close();\n\n              if (onClose) {\n                onClose();\n              }\n            },\n          });\n        },\n      }}\n    >\n      <Dialog maxWidth=\"xs\" aria-labelledby=\"confirmation-dialog-title\" open={state.isOpen} onClose={state?.onClose}>\n        <DialogTitle id=\"confirmation-dialog-title\">{state.title}</DialogTitle>\n        <DialogContent>{state.content}</DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={state?.onClose}>\n            Cancel\n          </Button>\n          <Button onClick={state?.onOk} color=\"primary\">\n            Confirm\n          </Button>\n        </DialogActions>\n      </Dialog>\n      {children}\n    </ConfirmContext.Provider>\n  );\n};\n\nexport default ConfirmProvider;\n\nexport function useConfirmContext() {\n  return useContext(ConfirmContext);\n}\n","import {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n  useTheme,\n  Avatar,\n  IconButton,\n  Tooltip,\n  InputBase,\n  Link,\n} from '@material-ui/core';\nimport {\n  AlertCircle,\n  AlertCircleOutline,\n  CheckCircle,\n  CheckCircleOutline,\n  Delete,\n  Pencil,\n  Close,\n  Check,\n} from 'mdi-material-ui';\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Post as PostType, useFeedContext } from '../contexts/FeedContext';\nimport NewComment from './NewComment';\nimport { useUserContext } from '../contexts/UserContext';\nimport { useConfirmContext } from '../contexts/ConfirmContext';\nimport { useSnackBarContext } from '../contexts/SnackBarContext';\n\nexport interface PostProps {\n  post: PostType;\n}\n\nconst Post: React.SFC<PostProps> = ({ post }) => {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [updatedContent, setContent] = useState(post.content);\n\n  const { toggleFactPost, toggleFakePost, deletePost, updatePostContent } = useFeedContext();\n  const theme = useTheme();\n  const { user } = useUserContext();\n  const { confirm } = useConfirmContext();\n  const { snackBar } = useSnackBarContext();\n\n  return (\n    <Paper>\n      <Box p={2}>\n        <Grid container direction=\"column\" spacing={2}>\n          <Grid item>\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box flex={0} pr={2}>\n                <Avatar alt={post.createdBy.name} src={post.createdBy.avatarUrl} />\n              </Box>\n\n              <Box flex={1}>\n                <Typography variant=\"body1\">\n                  <Link component={RouterLink} to={`/${post.createdBy.id}`} style={{ textDecoration: 'none' }}>\n                    {post.createdBy.name}\n                  </Link>\n                </Typography>\n\n                <Typography variant=\"caption\">{post.createdAt.toLocaleString()}</Typography>\n              </Box>\n\n              {post.createdBy.name === user?.name && (\n                <Box flex={0} display=\"flex\" style={{ marginBottom: 'auto' }}>\n                  {!isUpdating ? (\n                    <>\n                      <Box pr={1}>\n                        <Tooltip title=\"Update Post\" aria-label=\"update post\">\n                          <IconButton size=\"small\" aria-label=\"update\" onClick={() => setIsUpdating(true)}>\n                            <Pencil fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n\n                      <Tooltip title=\"Delete Post\" aria-label=\"delete post\">\n                        <IconButton\n                          onClick={() => {\n                            confirm({\n                              title: 'Attention!',\n                              content: 'Do you confirm deleting this post?',\n                              onOk() {\n                                deletePost(post.id);\n                                snackBar('Post deleted successfully!');\n                              },\n                            });\n                          }}\n                          size=\"small\"\n                          aria-label=\"delete\"\n                        >\n                          <Delete fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </>\n                  ) : (\n                    <>\n                      <Box pr={1}>\n                        <Tooltip title=\"Cancel\" aria-label=\"cancel\">\n                          <IconButton size=\"small\" aria-label=\"cancel\" onClick={() => setIsUpdating(false)}>\n                            <Close fontSize=\"small\" />\n                          </IconButton>\n                        </Tooltip>\n                      </Box>\n\n                      <Tooltip title=\"Save\" aria-label=\"save\">\n                        <IconButton\n                          onClick={() => {\n                            confirm({\n                              title: 'Attention!',\n                              content: 'Do you confirm saving this changes?',\n                              onOk() {\n                                updatePostContent(post.id, updatedContent);\n                                setIsUpdating(false);\n                                snackBar('Post updated successfully!');\n                              },\n                            });\n                          }}\n                          size=\"small\"\n                          aria-label=\"save\"\n                        >\n                          <Check fontSize=\"small\" />\n                        </IconButton>\n                      </Tooltip>\n                    </>\n                  )}\n                </Box>\n              )}\n            </Box>\n          </Grid>\n\n          <Grid item>\n            {!isUpdating ? (\n              <Typography variant=\"body2\" component=\"pre\">\n                {post.content}\n              </Typography>\n            ) : (\n              <InputBase\n                autoFocus\n                style={{ margin: 0, width: '100%', padding: 0 }}\n                multiline\n                onChange={(e) => setContent(e.target.value)}\n                inputProps={{\n                  style: {\n                    fontSize: '0.875rem',\n                    fontWeight: 400,\n                    lineHeight: 1.43,\n                    letterSpacing: '0.01071em',\n                    padding: 0,\n                  },\n                }}\n                value={updatedContent}\n              />\n            )}\n          </Grid>\n\n          <Grid item>\n            <Divider />\n          </Grid>\n\n          <Grid item container alignItems=\"baseline\" spacing={2}>\n            {user && (\n              <>\n                <Grid item>\n                  <Button\n                    startIcon={post.type === 'fake' ? <AlertCircle /> : <AlertCircleOutline />}\n                    onClick={() => toggleFakePost(post.id)}\n                    disabled={isUpdating}\n                    style={\n                      post.type === 'fake'\n                        ? {\n                            color: theme.palette.error.main,\n                          }\n                        : {}\n                    }\n                  >\n                    fake\n                  </Button>\n                </Grid>\n\n                <Grid item>\n                  <Button\n                    startIcon={post.type === 'fact' ? <CheckCircle /> : <CheckCircleOutline />}\n                    onClick={() => toggleFactPost(post.id)}\n                    disabled={isUpdating}\n                    style={\n                      post.type === 'fact'\n                        ? {\n                            color: theme.palette.success.main,\n                          }\n                        : {}\n                    }\n                  >\n                    fact\n                  </Button>\n                </Grid>\n              </>\n            )}\n\n            <Grid item>\n              {post.factedUsers.length === 0 && post.fakedUsers.length === 0 && (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  Be the first to vote in this post!\n                </Typography>\n              )}\n\n              {(post.factedUsers.length !== 0 || post.fakedUsers.length !== 0) && (\n                <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                  <b>{post.fakedUsers.length}</b>\n                  {` ${post.fakedUsers.length > 1 ? 'users' : 'user'} voted `}\n                  <b style={{ color: theme.palette.error.main }}>Fake</b>\n                  {' and '}\n                  <b>{post.factedUsers.length}</b>\n                  {` ${post.fakedUsers.length > 1 ? 'users' : 'user'} voted `}\n                  <b style={{ color: theme.palette.success.main }}>Fact</b>\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n\n          {user && (\n            <Grid item>\n              <NewComment disabled={isUpdating} postId={post.id} />\n            </Grid>\n          )}\n\n          {post.comments.length > 0 && (\n            <Grid item>\n              <Box pb={1}>\n                <Typography variant=\"caption\">Comentários</Typography>\n              </Box>\n\n              {post.comments.map((comment) => (\n                <Box key={comment.id} display=\"flex\" alignItems=\"center\" pb={1}>\n                  <Box pr={1} flexGrow={0}>\n                    <Avatar\n                      style={{ width: 25, height: 25 }}\n                      alt={comment.createdBy.name}\n                      src={comment.createdBy.avatarUrl}\n                    />\n                  </Box>\n\n                  <Box pr={1} flexGrow={0} display=\"flex\" alignItems=\"baseline\">\n                    <Box pr={1}>\n                      <Typography variant=\"subtitle2\">\n                        <Link component={RouterLink} to={`/${comment.createdBy.id}`} style={{ textDecoration: 'none' }}>\n                          {comment.createdBy.name}\n                        </Link>\n                      </Typography>\n                    </Box>\n                    <Typography variant=\"body2\">{comment.content}</Typography>\n                  </Box>\n                </Box>\n              ))}\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Post;\n","import { Box, CircularProgress, Grid, Typography } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { useFeedContext } from '../contexts/FeedContext';\nimport Post from './Post';\n\ntype FeedProps = {\n  userId?: number | string;\n};\n\nconst PostFeed: React.FC<FeedProps> = ({ userId }) => {\n  const { feed, loading, loadMorePosts } = useFeedContext();\n  const listRef = useRef<HTMLDivElement>();\n  const SCROLL_OFFSET_TO_LOAD = 300;\n\n  function checkForMorePosts() {\n    if (\n      !loading &&\n      (listRef.current?.getBoundingClientRect().bottom || 0) <= window.innerHeight + SCROLL_OFFSET_TO_LOAD\n    ) {\n      loadMorePosts();\n    }\n  }\n\n  useEffect(() => {\n    checkForMorePosts();\n    document.getElementById('app')!.addEventListener('scroll', checkForMorePosts);\n    return () => {\n      document.getElementById('app')!.removeEventListener('scroll', checkForMorePosts);\n    };\n  });\n\n  return (\n    <>\n      <Box p={1}>\n        <Typography variant=\"overline\">{userId ? 'Latest posts of this user' : 'Latest posts'}</Typography>\n      </Box>\n\n      <Grid innerRef={listRef} container spacing={4} direction=\"column\">\n        {feed.posts.map((post) => (\n          <Grid item key={post.id}>\n            <Post post={post} />\n          </Grid>\n        ))}\n\n        {loading && (\n          <Grid item container justify=\"center\">\n            <CircularProgress size={28} />\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default PostFeed;\n","import React, { cloneElement, Children, isValidElement } from 'react';\nimport MuiMenu from '@material-ui/core/Menu';\nimport { MenuItemProps } from '@material-ui/core/MenuItem';\n\ntype MenuProps = {\n  anchor: JSX.Element;\n};\n\nconst Menu: React.FC<MenuProps> = ({ anchor, children }) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const propsToHandleMenuLocation = {\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center',\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center',\n    },\n  } as const;\n\n  // injects `handleToggle` in onClick\n  const renderAncorWithProps = cloneElement(anchor, {\n    'aria-controls': 'simple-menu',\n    'aria-haspopup': 'true',\n    onClick: (e: any) => {\n      if (anchor.props.onClick) {\n        anchor.props.onClick();\n      }\n      handleClick(e);\n    },\n  });\n\n  // injects `handleClose` in onClick\n  const renderChildrenWithProps = Children.map(children, (child) => {\n    if (isValidElement(child)) {\n      return cloneElement<MenuItemProps>(child, {\n        onClick: () => {\n          if (child.props.onClick) {\n            child.props.onClick();\n          }\n          handleClose();\n        },\n      });\n    }\n    return child;\n  });\n\n  return (\n    <>\n      {renderAncorWithProps}\n\n      <MuiMenu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        {...propsToHandleMenuLocation}\n        onClose={handleClose}\n      >\n        {renderChildrenWithProps}\n      </MuiMenu>\n    </>\n  );\n};\n\nexport default Menu;\n","import { Box, Button, InputBase, Paper } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { useFeedContext } from '../contexts/FeedContext';\nimport { useUserContext } from '../contexts/UserContext';\n\nconst NewPost: React.FC = () => {\n  const { user } = useUserContext();\n  const [content, setContent] = useState('');\n  const [img, setImg] = useState<File | null>(null);\n  const { addPost } = useFeedContext();\n  const uploadInputRef = useRef<HTMLInputElement>(null);\n\n  return (\n    <Paper>\n      {img && (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <img src={URL.createObjectURL(img)} alt=\"post img\" style={{ width: '100%' }} />\n        </Box>\n      )}\n\n      <Box p={2} mb={2}>\n        <InputBase\n          multiline\n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          placeholder={`Hey ${user!.name ?? user!.email}! Share something with us!`}\n          style={{\n            width: '100%',\n          }}\n        />\n        <Box display=\"flex\" justifyContent=\"flex-end\">\n          <Box mr=\"auto\">\n            <Button\n              disableElevation\n              onClick={() => {\n                uploadInputRef.current!.click();\n              }}\n            >\n              Add a picture\n              <input\n                ref={uploadInputRef}\n                style={{ display: 'none' }}\n                type=\"file\"\n                accept=\"image/x-png,image/gif,image/jpeg\"\n                onChange={(e) => {\n                  const file = e.target.files ? e.target.files[0] : null;\n\n                  if (!file) {\n                    return;\n                  }\n\n                  setImg(file);\n                }}\n              />\n            </Button>\n          </Box>\n\n          <Button\n            color=\"primary\"\n            disabled={!content}\n            onClick={() => {\n              setContent('');\n              addPost({\n                content,\n                createdAt: new Date(),\n                createdBy: {\n                  id: 1,\n                  name: user!.name,\n                  avatarUrl: user!.avatarUrl,\n                },\n                comments: [],\n                factedUsers: [],\n                fakedUsers: [],\n              });\n            }}\n          >\n            POST\n          </Button>\n        </Box>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default NewPost;\n","import {\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  Grid,\n  GridList,\n  GridListTile,\n  Tooltip,\n  Typography,\n} from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport { ArrowLeft, CakeVariant, Email, MapMarker, Pencil } from 'mdi-material-ui';\nimport React, { useEffect, useRef } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport FeedProvider from '../contexts/FeedContext';\nimport { useProfileContext } from '../contexts/ProfileContext';\nimport { useSnackBarContext } from '../contexts/SnackBarContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport Feed from './Feed';\n\nconst Profile: React.FC = () => {\n  const { userId } = useParams<{ userId: string }>();\n  const { snackBar } = useSnackBarContext();\n  const history = useHistory();\n  const { user: loggedUser } = useUserContext();\n  const { user, fetchUser, loadingFollowBtn, loadingAvatarBtn, toggleFollow, changeAvatar } = useProfileContext();\n  const uploadInputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    const init = async () => {\n      const result = await fetchUser(userId);\n\n      if (typeof result === 'string') {\n        snackBar(result, 'danger');\n        history.push('/');\n      }\n    };\n\n    init();\n  }, [userId]);\n\n  return user ? (\n    <>\n      <Grid item md={4} xs={12} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        <>\n          <Box display=\"flex\" pt={1} pb={2} justifyContent=\"center\">\n            <Button\n              style={{ textTransform: 'none' }}\n              onClick={() => {\n                history.push('/');\n              }}\n            >\n              <Box display=\"flex\" pr={2}>\n                <ArrowLeft />\n              </Box>\n              Back to Feed\n            </Button>\n          </Box>\n\n          <Box display=\"flex\" pb={2}>\n            <Box position=\"relative\" width=\"70%\" m=\"auto\" pb=\"70%\">\n              <Avatar\n                style={{ width: '100%', height: '100%', position: 'absolute', top: 0, left: 0 }}\n                alt={user.name}\n                src={user.avatarUrl}\n              />\n\n              {loggedUser && loggedUser.profileId === user.profileId && (\n                <Tooltip title=\"Change Profile Photo\" aria-label=\"change profile photo\">\n                  <Button\n                    variant=\"contained\"\n                    aria-label=\"change photo\"\n                    color=\"primary\"\n                    style={{\n                      borderRadius: '50%',\n                      position: 'absolute',\n                      bottom: '5%',\n                      right: '5%',\n                      width: '48px',\n                      minWidth: '48px',\n                      height: '48px',\n                    }}\n                    onClick={() => {\n                      uploadInputRef.current!.click();\n                    }}\n                  >\n                    {!loadingAvatarBtn ? (\n                      <Pencil />\n                    ) : (\n                      <CircularProgress size={24} style={{ color: 'white', display: 'table' }} />\n                    )}\n\n                    <input\n                      ref={uploadInputRef}\n                      style={{ display: 'none' }}\n                      type=\"file\"\n                      accept=\"image/x-png,image/gif,image/jpeg\"\n                      onChange={async (e) => {\n                        const file = e.target.files ? e.target.files[0] : null;\n\n                        if (!file) {\n                          return;\n                        }\n\n                        const result = await changeAvatar(+userId, file);\n\n                        if (typeof result === 'string') {\n                          snackBar(result, 'danger');\n                        }\n                      }}\n                    />\n                  </Button>\n                </Tooltip>\n              )}\n            </Box>\n          </Box>\n\n          <Box width=\"fit-content\" m=\"auto\">\n            <Typography variant=\"h4\" style={{ textAlign: 'center' }}>{`${user.name} ${user.lastName}`}</Typography>\n\n            <Box color={grey[600]} pt={2} m=\"auto\" width=\"fit-content\">\n              <Grid container spacing={2}>\n                <Grid item>\n                  <Typography>{`${user.followers.length} Followers`}</Typography>\n                </Grid>\n                <Grid item>\n                  <Divider orientation=\"vertical\" />\n                </Grid>\n                <Grid item>\n                  <Typography>{`${user.following.length} Following`}</Typography>\n                </Grid>\n              </Grid>\n\n              <Box display=\"flex\" pb={1} pt={2}>\n                <Box mr={1}>\n                  <Email />\n                </Box>\n                <Typography>{user.email}</Typography>\n              </Box>\n\n              {user.location && (\n                <Box display=\"flex\" alignItems=\"center\" pb={1}>\n                  <Box mr={1}>\n                    <MapMarker />\n                  </Box>\n                  <Typography>{user.location}</Typography>\n                </Box>\n              )}\n\n              {user.birthDate && (\n                <Box display=\"flex\" alignItems=\"center\" pb={1}>\n                  <Box mr={1}>\n                    <CakeVariant />\n                  </Box>\n                  <Typography>{user.birthDate.toLocaleString().split(' ')[0]}</Typography>\n                </Box>\n              )}\n\n              {loggedUser && loggedUser.profileId !== user.profileId && (\n                <Box pb={2} pt={3}>\n                  <Button\n                    style={{ textTransform: 'none', width: '100%' }}\n                    onClick={async () => {\n                      const result = await toggleFollow(user.profileId);\n\n                      if (typeof result === 'string') {\n                        snackBar(result, 'danger');\n                      }\n                    }}\n                    color={loggedUser.following.includes(user.profileId) ? 'default' : 'primary'}\n                    variant=\"contained\"\n                    disableElevation\n                    disabled={loadingFollowBtn}\n                  >\n                    {loggedUser.following.includes(user.profileId) ? 'Unfollow' : 'Follow'}\n                  </Button>\n                </Box>\n              )}\n            </Box>\n          </Box>\n\n          <Box mx={4} py={2}>\n            <Divider />\n          </Box>\n\n          <Box px={3}>\n            <Box pb={2}>\n              <Typography variant=\"h6\">Gallery</Typography>\n            </Box>\n\n            <GridList spacing={8} cols={3} cellHeight=\"auto\">\n              <GridListTile cols={1}>\n                <Box position=\"relative\" width=\"100%\" m=\"auto\" pb=\"100%\">\n                  <img\n                    alt=\"teste\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      top: 0,\n                      borderRadius: '10px',\n                      left: 0,\n                    }}\n                    src=\"https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4\"\n                  />\n                </Box>\n              </GridListTile>\n              <GridListTile cols={1}>\n                <Box position=\"relative\" width=\"100%\" m=\"auto\" pb=\"100%\">\n                  <img\n                    alt=\"teste\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      top: 0,\n                      borderRadius: '10px',\n                      left: 0,\n                    }}\n                    src=\"https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4\"\n                  />\n                </Box>\n              </GridListTile>\n              <GridListTile cols={1}>\n                <Box position=\"relative\" width=\"100%\" m=\"auto\" pb=\"100%\">\n                  <img\n                    alt=\"teste\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      top: 0,\n                      borderRadius: '10px',\n                      left: 0,\n                    }}\n                    src=\"https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4\"\n                  />\n                </Box>\n              </GridListTile>\n              <GridListTile cols={1}>\n                <Box position=\"relative\" width=\"100%\" m=\"auto\" pb=\"100%\">\n                  <img\n                    alt=\"teste\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      top: 0,\n                      borderRadius: '10px',\n                      left: 0,\n                    }}\n                    src=\"https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4\"\n                  />\n                </Box>\n              </GridListTile>\n              <GridListTile cols={1}>\n                <Box position=\"relative\" width=\"100%\" m=\"auto\" pb=\"100%\">\n                  <img\n                    alt=\"teste\"\n                    style={{\n                      width: '100%',\n                      height: '100%',\n                      position: 'absolute',\n                      top: 0,\n                      borderRadius: '10px',\n                      left: 0,\n                    }}\n                    src=\"https://avatars2.githubusercontent.com/u/29166076?s=460&u=38c72ddb1aaa23b9350119d7db2645e9a2c3e4d1&v=4\"\n                  />\n                </Box>\n              </GridListTile>\n            </GridList>\n          </Box>\n        </>\n      </Grid>\n\n      <Grid item container alignItems=\"center\" xs={12} md={8}>\n        <Grid item style={{ width: '100%' }}>\n          <FeedProvider>\n            <Feed userId={userId} />\n          </FeedProvider>\n        </Grid>\n      </Grid>\n    </>\n  ) : (\n    <Grid item style={{ margin: 'auto' }}>\n      <Box display=\"flex\" height=\"50vh\" alignItems=\"center\" justifyContent=\"center\" m=\"auto\">\n        <CircularProgress />\n      </Box>\n    </Grid>\n  );\n};\n\nexport default Profile;\n","import {\n  AppBar,\n  Avatar,\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n  MenuItem,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport { AccountCircle } from 'mdi-material-ui';\nimport React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport FeedProvider from '../contexts/FeedContext';\nimport ProfileProvider from '../contexts/ProfileContext';\nimport { useSnackBarContext } from '../contexts/SnackBarContext';\nimport { useUserContext } from '../contexts/UserContext';\nimport Feed from './Feed';\nimport Menu from './Menu';\nimport NewPost from './NewPost';\nimport Profile from './Profile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Layout: React.FC = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const theme = useTheme();\n  const { user, logout } = useUserContext();\n  const showMenu = useMediaQuery(theme.breakpoints.up('md'));\n  const { snackBar } = useSnackBarContext();\n\n  return (\n    <>\n      <AppBar position=\"relative\" style={{ height: 'fit-content' }}>\n        <Container maxWidth=\"lg\" style={{ padding: 0 }}>\n          <Toolbar>\n            <Typography variant=\"h6\" className={classes.title}>\n              <Link href=\"/\" color=\"inherit\" style={{ textDecoration: 'none' }}>\n                Fake Less\n              </Link>\n            </Typography>\n\n            <Box>\n              {user ? (\n                <Menu\n                  anchor={\n                    <Button\n                      startIcon={<Avatar style={{ width: 25, height: 25 }} alt={user.name} src={user.avatarUrl} />}\n                      color=\"inherit\"\n                      style={{ textTransform: 'none' }}\n                    >\n                      {user.name}\n                    </Button>\n                  }\n                >\n                  <MenuItem\n                    onClick={() => {\n                      logout();\n                      history.push('/login');\n                      snackBar('See you next time! Bye bye 👋');\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </Menu>\n              ) : (\n                <Button color=\"inherit\" onClick={() => history.push('/login')}>\n                  Login\n                </Button>\n              )}\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n\n      <Container maxWidth=\"md\" component=\"main\">\n        <Box py={3}>\n          <Grid container spacing={4}>\n            <Switch>\n              <Route path=\"/:userId\">\n                <ProfileProvider>\n                  <Profile />\n                </ProfileProvider>\n              </Route>\n\n              <Route path=\"/\">\n                {showMenu && (\n                  <Grid item md={2}>\n                    <Box pr={2}>\n                      <Grid container direction=\"column\" spacing={1}>\n                        {user && (\n                          <Grid item>\n                            <Button\n                              style={{ textTransform: 'none', width: '100%', justifyContent: 'flex-start' }}\n                              onClick={() => {\n                                history.push(`/${user.id}`);\n                              }}\n                            >\n                              <Box display=\"flex\" pr={2}>\n                                <AccountCircle />\n                              </Box>\n                              Profile\n                            </Button>\n                          </Grid>\n                        )}\n                      </Grid>\n                    </Box>\n                  </Grid>\n                )}\n                <Grid item container alignItems=\"center\" xs={12} md={8}>\n                  <Grid item style={{ width: '100%' }}>\n                    <FeedProvider>\n                      {user && <NewPost />}\n                      <Feed />\n                    </FeedProvider>\n                  </Grid>\n                </Grid>\n              </Route>\n            </Switch>\n          </Grid>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Box, styled } from '@material-ui/core';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Layout from './components/Layout';\n\nconst Root = styled(Box)({\n  display: 'flex',\n  flexGrow: 1,\n  flexDirection: 'column',\n  width: '100%',\n  height: '100vh',\n  overflow: 'auto',\n});\n\nconst App: React.FC = () => (\n  <Root id=\"app\">\n    <Switch>\n      <Route path={['/login', '/register']}>\n        <Login />\n      </Route>\n\n      <Route>\n        <Layout />\n      </Route>\n    </Switch>\n  </Root>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport grey from '@material-ui/core/colors/grey';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport App from './App';\nimport UserProvider from './contexts/UserContext';\nimport SnackBarProvider from './contexts/SnackBarContext';\nimport ConfirmProvider from './contexts/ConfirmContext';\n\nlet theme = createMuiTheme();\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiButton: {\n      root: {\n        color: grey[600],\n      },\n    },\n    MuiInputBase: {\n      root: {\n        marginBottom: '22px',\n      },\n      input: {\n        color: theme.palette.text.primary,\n      },\n      adornedStart: {\n        color: grey[600],\n      },\n    },\n    MuiOutlinedInput: {\n      root: {\n        borderRadius: '8px',\n      },\n    },\n    MuiFormHelperText: {\n      root: {\n        marginTop: '-19px',\n      },\n    },\n    MuiPaper: {\n      rounded: {\n        borderRadius: '8px',\n      },\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: 'outlined',\n    },\n    MuiPaper: {\n      elevation: 3,\n    },\n  },\n};\n\nReactDOM.render(\n  <>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <SnackBarProvider>\n          <ConfirmProvider>\n            <UserProvider>\n              <Router>\n                <App />\n              </Router>\n            </UserProvider>\n          </ConfirmProvider>\n        </SnackBarProvider>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}